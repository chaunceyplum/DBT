-- 
CREATE OR REPLACE TABLE POSTGRES_BATCH.SILVER.FACT_TRANSACTIONS AS 
WITH TRANSACTION_ITEMS AS (
    SELECT 
    ORDER_ITEM_ICEBERG.ORDER_ID,
    TRANSACTION_ICEBERG.FK_PERSON_ID AS PERSON_ID,
    ORDER_ITEM_ICEBERG.FK_PRODUCT_ID AS PRODUCT_ID,
    ORDER_ITEM_ICEBERG.FK_TRANSACTION_ID AS TRANSACTION_ID,
    ORDER_ITEM_ICEBERG.NUMBER_OF_PRODUCTS,
    ORDER_ITEM_ICEBERG.PRICE,
    TRANSACTION_ICEBERG.CREATED_AT AS TRANSACTION_DATE
    FROM ORDER_ITEM_ICEBERG
    JOIN TRANSACTION_ICEBERG ON ORDER_ITEM_ICEBERG.FK_TRANSACTION_ID = TRANSACTION_ICEBERG.TRANSACTION_ID
),
-- SELECT * FROM TRANSACTION_ITEMS;

ENRICHED_TRANSACTION AS (

    SELECT 
        TRANSACTION_ITEMS.ORDER_ID,
        TRANSACTION_ITEMS.PERSON_ID,
        TRANSACTION_ITEMS.PRODUCT_ID,
        TRANSACTION_ITEMS.TRANSACTION_ID,
        TRANSACTION_ITEMS.NUMBER_OF_PRODUCTS,
        TRANSACTION_ITEMS.PRICE,
        TRANSACTION_ITEMS.TRANSACTION_DATE,
        DATE_TRUNC('day', TRANSACTION_ITEMS.TRANSACTION_DATE) as DATE_KEY,
        PERSON_ICEBERG.FIRST_NAME,
        PERSON_ICEBERG.LAST_NAME,
        PERSON_ICEBERG.EMAIL,
        PRODUCT_ICEBERG.PRODUCT_NAME,
        
    FROM TRANSACTION_ITEMS
    JOIN PRODUCT_ICEBERG ON PRODUCT_ICEBERG.PRODUCT_ID = TRANSACTION_ITEMS.PRODUCT_ID
    JOIN PERSON_ICEBERG ON PERSON_ICEBERG.PERSON_ID = TRANSACTION_ITEMS.PERSON_ID
        

)
SELECT * FROM ENRICHED_TRANSACTION;

CREATE OR REPLACE TABLE POSTGRES_BATCH.SILVER.DIM_PRODUCTS AS
SELECT
    PRODUCT_ID,
    PRODUCT_NAME,
    PRICE AS CURRENT_PRICE,
    IN_STOCK
FROM POSTGRES_BATCH.BRONZE.PRODUCT_ICEBERG;


CREATE OR REPLACE TABLE POSTGRES_BATCH.SILVER.DIM_PERSON AS
SELECT
    PERSON_ID,
    FIRST_NAME,
    LAST_NAME,
    EMAIL,
    CREATED_AT
FROM POSTGRES_BATCH.BRONZE.PERSON_ICEBERG;


CREATE OR REPLACE TABLE POSTGRES_BATCH.SILVER.DIM_DATE AS
WITH all_dates AS (
    SELECT DISTINCT DATE_TRUNC('day', created_at) AS date_key
    FROM POSTGRES_BATCH.BRONZE.TRANSACTION_ICEBERG

    UNION

    SELECT DISTINCT DATE_TRUNC('day', created_at) AS date_key
    FROM POSTGRES_BATCH.BRONZE.PERSON_ICEBERG

    -- Add more sources here if needed, like ORDER_ITEM_ICEBERG
)
SELECT
  date_key,
  EXTRACT(year FROM date_key) AS year,
  EXTRACT(quarter FROM date_key) AS quarter,
  EXTRACT(month FROM date_key) AS month,
  INITCAP(TO_CHAR(date_key, 'Month')) AS month_name,
  EXTRACT(day FROM date_key) AS day,
  EXTRACT(dow FROM date_key) AS day_of_week,
  INITCAP(TO_CHAR(date_key, 'Day')) AS day_name,
  CASE WHEN EXTRACT(dow FROM date_key) IN (0,6) THEN TRUE ELSE FALSE END AS is_weekend,
  EXTRACT(week FROM date_key) AS week_of_year,
  EXTRACT(dayofyear FROM date_key) AS day_of_year,
  TO_CHAR(date_key, 'YYYY-MM') AS year_month,
  TO_CHAR(date_key, 'YYYY') || '-Q' || EXTRACT(quarter FROM date_key) AS year_quarter
FROM all_dates;
SELECT * FROM DIM_DATE;



